'Set environment variables from ALM
'Environment("dcip") = QCUtil.CurrentTestSet.Field("CY_USER_08")
'Environment("deviceorientation") = QCUtil.CurrentTestSet.Field("CY_USER_09")
'Environment("devicescale") = QCUtil.CurrentTestSet.Field("CY_USER_10")
'Environment("dcuser") = QCUtil.CurrentTestSet.Field("CY_USER_11")
'Environment("dcpassword") = QCUtil.CurrentTestSet.Field("CY_USER_12")
'Environment("osxuser") = QCUtil.CurrentTestSet.Field("CY_USER_14")
'Environment("osxpassword") = QCUtil.CurrentTestSet.Field("CY_USER_15")
'Environment("devicespermachine") = QCUtil.CurrentTestSet.Field("CY_USER_16")
'Environment("iosappname") = QCUtil.CurrentTestSetTest.Field("TC_USER_11")
'Environment("androidappname") = QCUtil.CurrentTestSetTest.Field("TC_USER_12")

'##########################################################################################################################
''@Function:		DownloadQCAttachment
''@Description::	Download passed in file from QC > Subject//Trust/Framework/Files to SystemTempDir/MobileLabsAutomation
''@Return Type:		N/A
''@Created By: 		Naveen
''@Created On: 		05/28/2014
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:      strQCDir 
''@Param Type:      String
''@Param Drtn: 	    In
''@Param Desc:      The path of the QC test plan folder which has the attachments
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:      strFileName 
''@Param Type:      String
''@Param Drtn:      In
''@Param Desc:      The name of the file to download
''--------------------------------------------------------------------------------------------------------------------------
''Example:  DownloadQCAttachment "pscp.exe"
'' If strFileName param is not passed then all attachments will be downloaded
''--------------------------------------------------------------------------------------------------------------------------
Function DownloadQCAttachment(strQCDir, strFileName, strTargetPath)

	Set objFSO = CreateObject("Scripting.FileSystemObject")
	
	Set objFolder = QCUtil.QCConnection.TreeManager.NodeByPath(strQCDir) 
	Set objAttachmentList = objFolder.Attachments.NewList("") 
	
	For Each objAttachment In objAttachmentList 
		If InStr(1, objAttachment.DirectLink, strFileName, 1) > 0 Then
			Set objExtStorage = objAttachment.AttachmentStorage 
			objAttachmentName = objAttachment.DirectLink
			objExtStorage.Load objAttachmentName, true
			objFSO.MoveFile objExtStorage.ClientPath & "\" & objAttachmentName, strTargetPath & "\" & Split(objAttachment.Name, "_")(UBound(Split(objAttachment.Name, "_")))
			Exit For
		ElseIf strFileName = "" Then
			Set objExtStorage = objAttachment.AttachmentStorage 
			objAttachmentName = objAttachment.DirectLink
			objExtStorage.Load objAttachmentName, true
			objFSO.MoveFile objExtStorage.ClientPath & "\" & objAttachmentName, strTargetPath & "\" & Split(objAttachment.Name, "_")(UBound(Split(objAttachment.Name, "_")))
		End If
	Next
	
	Set objFSO = Nothing
End Function

'##########################################################################################################################
''@Function:		GetTrustInstallDir
''@Description:	  Returns the installation directory (complete path) for Trust.	
''@Return Type:	String
''@Created By: Naveen
''@Created On: 07/5/2012
''--------------------------------------------------------------------------------------------------------------------------
''@Example: strPath = GetTrustInstallDir
''--------------------------------------------------------------------------------------------------------------------------
Function GetTrustInstallDir()
	GetTrustInstallDir = GetDirInProgramFiles("Mobile Labs") & "\Trust\"
End Function

'##########################################################################################################################
''@Function:		GetDirInProgramFiles
''@Description:	  Returns the path of a folder within the Program Files folder
''@Return Type:	String
''@Created By: Naveen
''@Created On: 01/23/2013
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:         strFolderName 
''@Param Type:         String
''@Param Drtn: 		   In
''@Param Desc:       The name of the folder
''--------------------------------------------------------------------------------------------------------------------------
''@Example: strPath = GetDirInProgramFiles("Mobile Labs")
''--------------------------------------------------------------------------------------------------------------------------

Function GetDirInProgramFiles(strFolderName)
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objRoot = objFSO.GetDrive(objFSO.GetDriveName(Environment("SystemTempDir")))
	For Each objFolder in objRoot.RootFolder.SubFolders
		If StrComp(objFolder.Name, "Program Files (x86)", 1) = 0 Then
			For Each objSubFolder in objFolder.SubFolders
				If StrComp(objSubFolder.Name, strFolderName, 1) = 0 Then
					GetDirInProgramFiles = objSubFolder.Path
				End If
			Next
		ElseIf StrComp(objFolder.Name, "Program Files", 1) = 0 Then
			For Each objSubFolder in objFolder.SubFolders
				If StrComp(objSubFolder.Name, strFolderName, 1) = 0 Then
					GetDirInProgramFiles = objSubFolder.Path
				End If
			Next
		End If
	Next
End Function


'##########################################################################################################################
''@Function:		GetAvailableDeviceName
''@Description:	    Gets the first Available device name and it's OS
''@Return Type:	    None
''@Created By:      Naveen
''@Created On:      05/28/2014
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:      strCLIPath 
''@Param Type:      String
''@Param Drtn: 		In
''@Param Desc:      Path to the CLI exe
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:      strDCIP 
''@Param Type:      String
''@Param Drtn: 		In
''@Param Desc:      IP of the deviceConnect server
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:      strCLIUser 
''@Param Type:      String
''@Param Drtn: 		In
''@Param Desc:      Username to execute the CLI command
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:      strCLIPassword 
''@Param Type:      String
''@Param Drtn: 		In
''@Param Desc:      Password to execute the CLI command
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:      strDeviceName 
''@Param Type:      String
''@Param Drtn: 		Out
''@Param Desc:      Name of the available device
''--------------------------------------------------------------------------------------------------------------------------
''@Param Name:      strDeviceOS 
''@Param Type:      String
''@Param Drtn: 		In
''@Param Desc:      OS of the available device
''--------------------------------------------------------------------------------------------------------------------------
''@Example: strCLIPath = "C:\Program Files (x86)\Mobile Labs\Trust\CLI\MobileLabs.DeviceConnect.Cli.exe"
''			strdCIP = "192.168.1.50"
''          strCLIUser = "admin"
''			strCLIPassword = "deviceconnect"
''			GetAvailableDeviceName strCLIPath, strdCIP, strCLIUser, strCLIPassword, strDeviceName, strDeviceOS
''--------------------------------------------------------------------------------------------------------------------------

Function GetAvailableDeviceName(ByVal strCLIPath, ByVal strDCIP, ByVal strCLIUser,ByVal strCLIPassword, ByRef strDeviceName, ByRef strDeviceOS)
	
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	strOutFilePath = Environment("SystemTempDir") & "\deviceList.txt" 'Path to output text file
	If objFSO.FileExists(strOutFilePath) Then
		objFSO.DeleteFile(strOutFilePath)
	End If
	strConnectParam = strDCIP & " " &  strCLIUser & " "  & strCLIPassword & " -devicelist > " & strOutFilePath
	
	Set objShell = CreateObject("WScript.Shell")
	objShell.Run "cmd /c " & strCLIPath & " " & strConnectParam
	Wait 5
	Set objShell = Nothing
	
	Set objFile = objFSO.OpenTextFile(strOutFilePath)
	
	Do Until objFile.AtEndOfStream 
		strOutputline = objFile.ReadLine
		strOutput = strOutput & VBNewLine & strOutputline
	Loop
	
	If InStr(1, strOutput, "Offline:", 1) > InStr(1, strOutput, "Online:", 1) Then
		arrAll = Split(strOutput, "Offline:")
		arrOnline = Split(arrAll(0), VBNewLine)
	ElseIf InStr(1, strOutput, "Offline:", 1) < InStr(1, strOutput, "Online:", 1) Then
		arrAll = Split(strOutput, "Online:")
		arrOnline = Split(arrAll(1), VBNewLine)
	End If
	
	For i = 0 To UBound(arrOnline)
		If Len(arrOnline(i)) > 10 Then
			If InStr(1, arrOnline(i), "[", 1) = 0 Then
				strDeviceName = Trim(Split(arrOnline(i), "(")(0))
				If InStr(1, arrOnline(i), "ios", 1) > 0 Then
					strDeviceOS = "ios"
				ElseIf InStr(1, arrOnline(i), "android", 1) > 0 Then
					strDeviceOS = "android"
				End If
			Exit For
			End If
		End If
	Next
	
	objFile.Close
	Set objFile = Nothing
	Set objFSO = Nothing
End Function
